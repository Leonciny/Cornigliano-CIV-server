--------------------------------------------------------------------------------
+ Campo prezzo cambiato in  punti_necessari
+ Aggiunto campo is_redeemed in UtenteRiscattaPremio
+ Aggiunto campo username, nome, punti, data_iscr in Utente
+ Campo maps cambiato in coordinate
--------------------------------------------------------------------------------
Negozio(*Id*, nome, data_registrazione, is_active, descrizione, indirizzo, coordinate);
Premio(*Id*, descrizione, punti_necessari, quant_magazzino);
Utente(*Id*, email, password, username, nome, punti, data_iscr);
Acquisto(*Id*, data_ora, punti, +IdNegozio+);
UtenteRiscattaPremio(*+IdUtente+,+IdPremio+*, is_redeemed);
UtenteFaAcquisto(*+IdUtente+,+IdAcquisto+*);
--------------------------------------------------------------------------------
Create table Negozio(
  id int auto_increment PRIMARY KEY,
  nome varchar(100),
  data_registrazione date,
  is_active bool,
  descrizione varchar(255),
  indirizzo varchar(255),
  coordinate varchar(255)
);
Create table Premio(
  id int auto_increment PRIMARY KEY,
  nome varchar(50),
  descrizione varchar(255),
  punti_necessari int,
  quant_magazzino int
);
Create table Utente(
  id int auto_increment PRIMARY KEY,
  email varchar(50) UNIQUE,
  password varchar(50),
  data_iscr date,
  username varchar(50) UNIQUE,
  nome varchar(50),
  punti int DEFAULT 0
);
Create table Acquisto(
  id int auto_increment PRIMARY KEY,
  data_ora date,
  punti int,
  idNegozio int NOT NULL,
  FOREIGN KEY (idNegozio) REFERENCES Negozio(id)
);
Create table UtenteRiscattaPremio(
  idUtente int Not Null,
  idPremio int Not Null,
  is_redeeemed bool,
  PRIMARY KEY(idUtente,idPremio),
  FOREIGN KEY (idUtente) REFERENCES Utente(id),
  FOREIGN KEY (idPremio) REFERENCES Premio(id)
);
Create table UtenteFaAqcuisto(
  idUtente int Not Null,
  idAcquisto int Not Null,
  PRIMARY KEY(idUtente,idAcquisto),
  FOREIGN KEY (idUtente) REFERENCES Utente(id),
  FOREIGN KEY (idAcquisto) REFERENCES Acquisto(id)
);
--------------------------------------------------------------------------------
login => "SELECT * FROM Utente WHERE (username=? OR email=?) AND password=?"
findUtente => "SELECT * FROM Utente WHERE email=? OR username=?"
puntiUtente => "SELECT punti FROM Utente WHERE id=?",


--------------------------------------------------------------------------------
+ Dizionario con query con alias
+ export funzione per accedere a query
  - se parametro non esiste o errato throware errore